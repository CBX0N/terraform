#cloud-config
users:
  - name: ${username}
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    lock_passwd: false
    hashed_passwd: ${hashed_password}
    ssh_authorized_keys:
      - ${ssh_key}

write_files:
  - path: /etc/networkd-dispatcher/routable.d/10-eth0-post-up
    permissions: "0755"
    content: |
      #!/bin/bash

      # Detect internal interface (anything that's not eth0 or lo)
      INTERNAL_IF=$(ip -o link show | awk -F': ' '{print $2}' | grep -v -E '^(lo|eth0)$' | head -n 1)

      # Enable forwarding
      sysctl -w net.ipv4.ip_forward=1
      sysctl -w net.ipv4.conf.all.rp_filter=0
      sysctl -w net.ipv4.conf.default.rp_filter=0

      # Outbound NAT
      iptables -t nat -A POSTROUTING -s ${network_cidr} -o eth0 -j MASQUERADE

      %{ for rule in dnat_rules ~}
      # DNAT rule
      iptables -t nat -A PREROUTING -i eth0 -p ${rule.protocol} --dport ${rule.external_port} -j DNAT --to-destination ${rule.ip}:${rule.internal_port}
      
      %{ if rule.forward == true }
      # Forward inbound
      iptables -A FORWARD -i eth0 -o $INTERNAL_IF -p ${rule.protocol} -d ${rule.ip} --dport ${rule.internal_port} -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
      # Forward return traffic
      iptables -A FORWARD -i $INTERNAL_IF -o eth0 -p ${rule.protocol} -s ${rule.ip} --sport ${rule.internal_port} -m state --state ESTABLISHED,RELATED -j ACCEPT
      %{ endif }
      %{ endfor }

      # Save iptables rules
      iptables-save > /etc/iptables/rules.v4

package_update: true
packages:
  - iptables-persistent

runcmd:
  - reboot
